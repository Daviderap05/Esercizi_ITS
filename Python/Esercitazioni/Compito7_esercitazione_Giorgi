# 1) Scrivi una funzione che converta una lista di tuple (chiave, valore) in un dizionario. Se
# la chiave è già presente, somma il valore al valore già associato alla chiave.


from typing import Any
def function1(lista: list) -> dict:
    
    diz: dict[Any, Any] = {}
    
    for key, value in lista:
        
        if key in diz:
            
            diz[key] += value
            
        else:
            
            diz[key] = value
            
    return diz
    
lista: list = [
    (1, 2),
    (2, 4),
    (3, 5),
    (1, 6),
    (2, 7)
]

print(function1(lista))



# 2) Scrivi una funzione che prenda una lista di numeri e ritorni un dizionario che
# classifichi i numeri in liste separate per numeri positivi e negativi.


def function2(lista_n: list) -> dict:

    diz: dict[str, list[int]] = {"Positivi" : [], "Negativi" : []}
    
    for n in lista_n:
        
        if n >= 0:
            
            diz["Positivi"].append(n)
            
        else:
            
            diz["Negativi"].append(n)

    return diz
    
lista_n: list= [1, -2, 3, -4, 5]
print(function2(lista_n))



# 3) Scrivi una funzione che accetti un dizionario di prodotti con i relativi prezzi e
# restituisca un nuovo dizionario con solo i prodotti che hanno un prezzo inferiore a 50, ma
# con i prezzi aumentati del 10% e arrotondati a due cifre decimali.


def function3(diz: dict) -> dict:

    diz2: dict[str, float] = {}
    
    for key, value in diz.items():
        
        if value <= 50.0:
            
            diz2[key] = round((value * 1.1), 2)
            
    return diz2
    
dizionario = {"maglietta" : 11.5, "felpa" : 12.5, "cappello" : 52}

print(function3(dizionario))



# 4) Scrivi una funzione che verifica se una combinazione di condizioni (X, Y, e Z) è
# soddisfatta per procedere con un'azione. L'azione può procedere solo se la condizione X
# è vera e almeno una tra Y e Z è vera. La funzione deve ritornare "Azione permessa"
# oppure "Azione negata" a seconda delle condizioni che sono soddisfatte.


def function4(x: bool, y: bool, z: bool):
    
    if x and (y or z):
        
        print("Azione permessa")
        
    else:
        
        print("Azione negata")


function4(False, True, True)
        
      
        
# 5) Scrivi una funzione che moltiplica tutti i numeri interi di una lista che sono minori di un
# dato valore intero definito threshold.


def function5(lista_n: list) -> int:
    
    threshold: int = 5
    prodotto: int = 1
    
    for n in lista_n:
        
        if n < threshold:
            
            prodotto *= n
            
    return prodotto
    
lista_n: list = [1, 2, 3, 4, 5, 6, 7, 8, 9]

print(function5(lista_n))



# 6) Scrivere in Python dei cicli che stampino le seguenti sequenze di valori:
# a) 2, 4, 6, 8, 10, 12, 14
# b) 1, 4, 7, 10, 13
# c) 30, 25, 20, 15, 10, 5, 0
# d) 5, 15, 25, 35, 45


for i in range (2, 15, 2):
    print(i)
    
for i in range (1, 14, 3):
    print(i)
    
for i in range (30, -1, -5):
    print(i)

for i in range (5, 46, 10):
    print(i)

